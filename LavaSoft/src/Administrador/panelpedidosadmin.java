package Administrador;
//import java.awt.Font;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
//import javax.swing.text.Document;

// Importaciones esenciales para iText
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Chunk;

// Otras importaciones necesarias
import java.io.FileOutputStream;
import java.io.FileNotFoundException;
import java.sql.*;
import javax.swing.*;
import java.text.SimpleDateFormat;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author Luis DC
 */
public class panelpedidosadmin extends javax.swing.JPanel {
     public static Connection getConexion() {
    String conexionUrl = "jdbc:sqlserver://adnsoria.database.windows.net:1433;"
            + "database=LavaSoft;"
            + "user=admin1@adnsoria;"
            + "password=Ad@ncode123;"
            + "loginTimeout=30;"
            + "TrustServerCertificate=True;";

    try {
        con = DriverManager.getConnection(conexionUrl);  
       // System.out.println("Conectado");
        return con;
    } catch (SQLException ex) {
        System.out.println(ex.toString());
        return null;
    }
}
private int idClienteSeleccionado = -1;
   private int idUsuarioActual;
    /**
     * Creates new form panelpedidos
     */
     private Statement stm;
    private static Connection con;
    private DefaultTableModel m;
    public panelpedidosadmin() {
        initComponents();
        m=(DefaultTableModel) tblPedido.getModel();
        getConexion();
        cargarServicios();
        actualizarTablaPedidos();
        
        txtConsultaPedido.addKeyListener(new KeyAdapter() { //Anonima
    public void keyPressed(KeyEvent evt) {
        String busqueda = txtConsultaPedido.getText(); 
        buscarPedidos(busqueda);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPedido = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtNomCliente = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtConsultaPedido = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        btnRealizarPedido = new javax.swing.JButton();
        btnGenerarTicketP = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBusqueda = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtPeso = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jcbServicios = new javax.swing.JComboBox<>();
        txtTotal = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jcbEstado = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jcbFechaE = new com.toedter.calendar.JDateChooser();

        jPanel1.setMinimumSize(new java.awt.Dimension(750, 750));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(181, 218, 240));
        jPanel4.setMinimumSize(new java.awt.Dimension(750, 750));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Cliente");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 60, 24));

        jLabel5.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Fecha Estimada");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, 20));

        jLabel6.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Total");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 60, -1));

        tblPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Cliente", "Servicio", "Fecha del pedido", "Fecha Estimada", "EstadoPedido", "CostoTotal", "Peso", "Detalles Pedido"
            }
        ));
        tblPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPedidoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPedido);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, 460, 380));

        jLabel3.setBackground(new java.awt.Color(181, 218, 240));
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("_________________");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 120, 20));

        txtNomCliente.setBackground(new java.awt.Color(181, 218, 240));
        txtNomCliente.setBorder(null);
        jPanel4.add(txtNomCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 100, 20));

        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("__________________");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 100, -1));

        jLabel8.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Pedido");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, -1, -1));

        txtConsultaPedido.setBackground(new java.awt.Color(181, 218, 240));
        txtConsultaPedido.setBorder(null);
        txtConsultaPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultaPedidoActionPerformed(evt);
            }
        });
        jPanel4.add(txtConsultaPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 390, -1));

        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("_______________________________________________________________________________");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 400, -1));

        btnEditar.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(0, 0, 0));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/editar.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setBorder(null);
        btnEditar.setContentAreaFilled(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnEditar.setVerifyInputWhenFocusTarget(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel4.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 430, 90, 40));

        btnRealizarPedido.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        btnRealizarPedido.setForeground(new java.awt.Color(0, 0, 0));
        btnRealizarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/tarea-realizada.png"))); // NOI18N
        btnRealizarPedido.setText("Realizar pedido");
        btnRealizarPedido.setBorder(null);
        btnRealizarPedido.setContentAreaFilled(false);
        btnRealizarPedido.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnRealizarPedido.setVerifyInputWhenFocusTarget(false);
        btnRealizarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarPedidoActionPerformed(evt);
            }
        });
        jPanel4.add(btnRealizarPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 140, 40));

        btnGenerarTicketP.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        btnGenerarTicketP.setForeground(new java.awt.Color(0, 0, 0));
        btnGenerarTicketP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/factura.png"))); // NOI18N
        btnGenerarTicketP.setText("Generar ticket");
        btnGenerarTicketP.setBorder(null);
        btnGenerarTicketP.setContentAreaFilled(false);
        btnGenerarTicketP.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnGenerarTicketP.setVerifyInputWhenFocusTarget(false);
        btnGenerarTicketP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarTicketPActionPerformed(evt);
            }
        });
        jPanel4.add(btnGenerarTicketP, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 170, 40));

        btnEliminar.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(0, 0, 0));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setBorder(null);
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnEliminar.setVerifyInputWhenFocusTarget(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel4.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 430, 100, 40));

        btnBusqueda.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        btnBusqueda.setForeground(new java.awt.Color(0, 0, 0));
        btnBusqueda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar (1).png"))); // NOI18N
        btnBusqueda.setBorder(null);
        btnBusqueda.setContentAreaFilled(false);
        btnBusqueda.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnBusqueda.setVerifyInputWhenFocusTarget(false);
        btnBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusquedaActionPerformed(evt);
            }
        });
        jPanel4.add(btnBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 40, -1, -1));

        jLabel7.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Peso");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 50, 20));

        txtPeso.setBackground(new java.awt.Color(181, 218, 240));
        txtPeso.setBorder(null);
        txtPeso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesoActionPerformed(evt);
            }
        });
        jPanel4.add(txtPeso, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 100, 20));

        jLabel12.setBackground(new java.awt.Color(181, 218, 240));
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("__________________");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, 110, -1));

        jcbServicios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        jcbServicios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbServiciosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jcbServiciosMouseEntered(evt);
            }
        });
        jcbServicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbServiciosActionPerformed(evt);
            }
        });
        jPanel4.add(jcbServicios, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, -1, -1));

        txtTotal.setBackground(new java.awt.Color(181, 218, 240));
        txtTotal.setBorder(null);
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });
        jPanel4.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, 100, 20));

        jLabel9.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Estado");
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, 20));

        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("__________________");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 310, 100, -1));

        jcbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Pendiente", "Proceso", "Listo" }));
        jcbEstado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbEstadoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jcbEstadoMouseEntered(evt);
            }
        });
        jcbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEstadoActionPerformed(evt);
            }
        });
        jPanel4.add(jcbEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, -1, -1));

        jLabel10.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Servicio");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, 20));
        jPanel4.add(jcbFechaE, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 520));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtConsultaPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultaPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultaPedidoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarActionPerformed
     private void buscarPedidos(String busqueda) {
    try {
        stm = con.createStatement();
        String query = "SELECT P.idPedido, C.idCliente, C.Nombre, U.Nombre AS usuario, " +
                       "P.FechaCreacion, P.FechaEntregaEstimada, S.TipoServicio AS servicio, P.CostoTotal, P.Peso,P.EstadoPedido " +
                       "FROM Cliente C " +
                       "INNER JOIN Pedido P ON C.idCliente = P.idCliente " +
                       "INNER JOIN Usuario U ON P.idUsuario = U.idUsuario " +
                       "INNER JOIN Servicio S ON P.idServicio = S.idServicio " +
                       "WHERE C.Nombre LIKE '%" + busqueda + "%' OR " +
                       "P.FechaCreacion LIKE '%" + busqueda + "%' OR " +
                       "P.EstadoPedido LIKE '%" + busqueda + "%' OR " +
                       "S.TipoServicio LIKE '%" + busqueda + "%'";
        
        ResultSet res = stm.executeQuery(query);
        m.setRowCount(0);  
        
        if (!res.isBeforeFirst()) {  
            return;  
        }

        while (res.next()) {
            Object[] fila = {
                res.getInt("idPedido"),
                res.getString("Nombre"),
                res.getString("Servicio"),  
                res.getDate("FechaCreacion").toString(),
                res.getDate("FechaEntregaEstimada").toString(),
                res.getFloat("CostoTotal"),
                res.getInt("Peso"),
                res.getString("EstadoPedido")
            };
            m.addRow(fila); 
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al buscar los pedidos: " + ex.getMessage());
    }
}

    private void btnRealizarPedidoActionPerformed(java.awt.event.ActionEvent evt) {                                                  
      String id = txtNomCliente.getText();
String peso = txtPeso.getText();
String total = txtTotal.getText();
Date fecha = jcbFechaE.getDate(); 
String ser = jcbServicios.getSelectedItem().toString(); 
String es = jcbEstado.getSelectedItem().toString(); 

    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    String fec = sdf.format(fecha);

    int idServicio = Integer.parseInt(ser.split(" - ")[0]); // Obtener el ID del servicio

    if (idServicio != -1) {
    try {
        Statement stm = con.createStatement();
        String query = "INSERT INTO Pedido (IdCliente, FechaCreacion, IdServicio, Peso, CostoTotal,EstadoPedido) " +
                       "VALUES ('" + id + "', '" + fec + "', " + idServicio + ", " + peso + ", " + total + ", '" + es + "')";
        
        System.out.println(query);  // Para depuración
        stm.executeUpdate(query);

        JOptionPane.showMessageDialog(this, "Pedido registrado con éxito.");
    } catch (SQLException ex) {
        System.out.println("Error al registrar el pedido: " + ex.getMessage());
        JOptionPane.showMessageDialog(this, "Error al registrar el pedido. Intenta de nuevo.");
    }
} else {
    JOptionPane.showMessageDialog(this, "Servicio no encontrado.");
}
    
    actualizarTablaPedidos();
            limpiarCampos();

}                                                 
        
                             
    
    private void limpiarCampos() {
    txtPeso.setText("");
    txtTotal.setText("");
    jcbServicios.setSelectedIndex(0);
}
    
    private void actualizarTablaPedidos() {
     DefaultTableModel model = (DefaultTableModel) tblPedido.getModel();
    model.setRowCount(0);
    
    try (Connection conn = Conexion.getConnection()) {
        // USAR EL NOMBRE CORRECTO: FechaEntregaEstimada
        String sql = "SELECT p.idPedido, c.Nombre AS Cliente, s.Descripcion AS Servicio, " +
                     "p.FechaCreacion, p.FechaEntregaEstimada, p.Peso, p.CostoTotal, p.EstadoPedido " +
                     "FROM dbo.Pedido p " +
                     "JOIN dbo.Cliente c ON p.idCliente = c.idCliente " +
                     "JOIN dbo.Servicio s ON p.idServicio = s.idServicio " +
                     "ORDER BY p.FechaCreacion DESC";
        
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            ResultSet rs = stmt.executeQuery();
            
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm");
            
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("idPedido"),
                    rs.getString("Cliente"),
                    rs.getString("Servicio"),
                    dateFormat.format(rs.getTimestamp("FechaCreacion")),
                    // USAR EL NOMBRE CORRECTO AQUÍ TAMBIÉN
                    dateFormat.format(rs.getTimestamp("FechaEntregaEstimada")),
                    rs.getDouble("Peso"),
                    rs.getDouble("CostoTotal"),
                    rs.getString("EstadoPedido")
                });
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error al cargar pedidos: " + e.getMessage(), 
                                    "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
}

    private void btnGenerarTicketPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarTicketPActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tblPedido.getSelectedRow();
    
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(this, "Selecciona un pedido para generar el ticket.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    try (Connection conn = Conexion.getConnection()) {
        // Obtener el ID del pedido seleccionado
        int idPedido = (int) tblPedido.getValueAt(filaSeleccionada, 0);

        // Consulta para obtener los datos completos del pedido
        String sql = "SELECT p.idPedido, c.Nombre AS Cliente, s.Descripcion AS Servicio, " +
                     "p.FechaCreacion, p.FechaEntregaEstimada, p.Peso, p.CostoTotal " +
                     "FROM Pedido p " +
                     "JOIN Cliente c ON p.idCliente = c.idCliente " +
                     "JOIN Servicio s ON p.idServicio = s.idServicio " +
                     "WHERE p.idPedido = ?";
        
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, idPedido);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                // Obtener los datos del pedido
                String cliente = rs.getString("Cliente");
                String servicio = rs.getString("Servicio");
                double peso = rs.getDouble("Peso");
                double costoTotal = rs.getDouble("CostoTotal");

                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm");
                String fechaCreacion = sdf.format(rs.getTimestamp("FechaCreacion"));
                String fechaEntrega = sdf.format(rs.getTimestamp("FechaEntregaEstimada"));

                // Crear el documento PDF
                Document document = new Document();
                String fileName = "ticket_pedido_" + idPedido + ".pdf";
                PdfWriter.getInstance(document, new FileOutputStream(fileName));
                document.open();  

                Font titleFont = new Font(Font.FontFamily.TIMES_ROMAN, 20, Font.BOLD);
                Paragraph title = new Paragraph("LavaSoft", titleFont);
                title.setAlignment(Element.ALIGN_CENTER);
                document.add(title);
                document.add(new Paragraph("****************************************************", titleFont)); 
                document.add(Chunk.NEWLINE);  

                Paragraph text = new Paragraph("Recibo de Pedido\n", titleFont);
                text.setAlignment(Element.ALIGN_CENTER);
                document.add(text);

                Font normalFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL);
                Paragraph content = new Paragraph(
                    "Pedido ID: " + idPedido + "\n" +
                    "Cliente: " + cliente + "\n" +
                    "Servicio: " + servicio + "\n" +
                    "Peso: " + peso + " kg\n" +
                    "Costo Total: $" + costoTotal + "\n" +
                    "Fecha de Creación: " + fechaCreacion + "\n" +
                    "Fecha de Entrega Estimada: " + fechaEntrega + "\n", 
                    normalFont);
                content.setAlignment(Element.ALIGN_CENTER);
                document.add(content);
                document.add(Chunk.NEWLINE);  
                document.add(new Paragraph("****************************************************", titleFont));

                document.close();

                JOptionPane.showMessageDialog(this, "Ticket generado exitosamente: " + fileName);
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró información del pedido.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    } catch (SQLException | DocumentException | FileNotFoundException ex) {
        JOptionPane.showMessageDialog(this, "Error al generar el ticket: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }
    }//GEN-LAST:event_btnGenerarTicketPActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
      int r  = tblPedido.getSelectedRow();
        if (r == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona un Pedido para eliminar.");
            return;
        }
        int idPedido = (Integer) tblPedido.getValueAt(r, 0);
    String query = "DELETE FROM Pedido WHERE IdPedido = '" + idPedido + "'";
    try (Statement stmt = con.createStatement()) {
        int filasAfectadas = stmt.executeUpdate(query);
        if (filasAfectadas > 0) {
            JOptionPane.showMessageDialog(this, "Servicio borrado exitosamente.");
            txtNomCliente.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Servicio no encontrado.");
            txtPeso.setText("");
            txtTotal.setText("");
            jcbServicios.setSelectedIndex(0);
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error de base de datos: " + ex.getMessage());
    }
    actualizarTablaPedidos();
            limpiarCampos();
     
    }//GEN-LAST:event_btnEliminarActionPerformed
    // En el constructor o un método de inicialización
 private void cargarServicios() {
    try {
        Statement stm = con.createStatement();
        String query = "SELECT  IdServicio, TipoServicio FROM Servicio"; 
        ResultSet res = stm.executeQuery(query);
        
       jcbServicios.removeAllItems();
        jcbServicios.addItem("Selecciona servicio");  
        while (res.next()) {
            jcbServicios.addItem(res.getInt("IdServicio")+ " -  " + res.getString("TipoServicio"));
        }
    } catch (SQLException ex) {
        System.out.println("Error al cargar servicios: " + ex.getMessage());
    }
    
     
}
    private void btnBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusquedaActionPerformed
        // TODO add your handling code here:
        String busqueda = JOptionPane.showInputDialog(this, "Ingrese ID o nombre del cliente:");
    
    if (busqueda != null && !busqueda.trim().isEmpty()) {
        try (Connection conn = Conexion.getConnection()) {
            String sql = "SELECT IdCliente, Nombre FROM dbo.Cliente WHERE IdCliente = ? OR Nombre LIKE ?";
            
            try (PreparedStatement stmt = conn.prepareStatement(sql)) {
                // Intentar buscar por ID
                try {
                    int id = Integer.parseInt(busqueda);
                    stmt.setInt(1, id);
                    stmt.setString(2, "%" + busqueda + "%");
                } catch (NumberFormatException e) {
                    stmt.setInt(1, -1); // Valor que no coincidirá
                    stmt.setString(2, "%" + busqueda + "%");
                }
                
                ResultSet rs = stmt.executeQuery();
                
                if (rs.next()) {
                    idClienteSeleccionado = rs.getInt("IdCliente");
                    txtNomCliente.setText(rs.getString("Nombre"));
                } else {
                    JOptionPane.showMessageDialog(this, "Cliente no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al buscar cliente: " + e.getMessage(), 
                                        "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_btnBusquedaActionPerformed

    private void txtPesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesoActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void jcbServiciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbServiciosActionPerformed
        // TODO add your handling code here:
        //cargarServicios();
    }//GEN-LAST:event_jcbServiciosActionPerformed

    private void jcbServiciosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbServiciosMouseClicked
        // TODO add your handling code here:
        //cargarServicios();
    }//GEN-LAST:event_jcbServiciosMouseClicked

    private void jcbServiciosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbServiciosMouseEntered
        // TODO add your handling code here:
        cargarServicios();
    }//GEN-LAST:event_jcbServiciosMouseEntered

    private void jcbEstadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbEstadoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbEstadoMouseClicked

    private void jcbEstadoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbEstadoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbEstadoMouseEntered

    private void jcbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbEstadoActionPerformed
    
    private void tblPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPedidoMouseClicked
        // TODO add your handling code here:
        int r = tblPedido.getSelectedRow();
    txtNomCliente.setText(tblPedido.getValueAt(r, 0).toString());

    String Servicio = tblPedido.getValueAt(r, 2).toString();
    jcbServicios.setSelectedItem(Servicio);
    
   try {
    Object objFecha = tblPedido.getValueAt(r, 3);
    if (objFecha != null) {
        String fechaStr = objFecha.toString();
        
        SimpleDateFormat formatoEntrada;
        if (fechaStr.contains("/")) {
            formatoEntrada = new SimpleDateFormat("dd/MM/yyyy HH:mm"); 
        } else {
            formatoEntrada = new SimpleDateFormat("yyyy-MM-dd");
        }

        Date fecha = formatoEntrada.parse(fechaStr);
        jcbFechaE.setDate(fecha); 
    } else {
        jcbFechaE.setDate(null); 
    }
} catch (Exception e) {
    System.out.println("Error al convertir la fecha: " + e.getMessage());
}
   
      txtTotal.setText(tblPedido.getValueAt(r, 5).toString());
      
    txtPeso.setText(tblPedido.getValueAt(r, 6).toString());
    }//GEN-LAST:event_tblPedidoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBusqueda;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGenerarTicketP;
    private javax.swing.JButton btnRealizarPedido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcbEstado;
    private com.toedter.calendar.JDateChooser jcbFechaE;
    private javax.swing.JComboBox<String> jcbServicios;
    private javax.swing.JTable tblPedido;
    private javax.swing.JTextField txtConsultaPedido;
    private javax.swing.JTextField txtNomCliente;
    private javax.swing.JTextField txtPeso;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
