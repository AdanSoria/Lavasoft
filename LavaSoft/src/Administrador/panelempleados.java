package Administrador;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.SQLException;

import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author Luis DC
 */
public class panelempleados extends javax.swing.JPanel {

    /**
     * Creates new form panelempleados
     */
    
    public panelempleados() {
         try (Connection conn = Conexion.getConnection()) {
            System.out.println("Conexión exitosa:D.");
            
        } catch (SQLException e) {
            System.out.println("Error de conexión");
            e.printStackTrace();
            
        }
        
        initComponents();
        cargarTablaAlAbrir(); // Llama a la función para cargar la tabla
        agregarListenerBusqueda(); // Llama al método que agrega el listener para la barra de búsqueda
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbEmpleado = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        BarraDeBusqueda = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        btnbuscar = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        BarraDeBusqueda1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        BarraDeBusqueda3 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        BarraDeBusqueda4 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txthorario = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        comboBoxPuesto = new javax.swing.JComboBox<>();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(181, 218, 240));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Puesto:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        jLabel3.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Nombre:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 85, -1, -1));

        jLabel6.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Telefono:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, -1, -1));

        jtbEmpleado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdUsuario", "Nombre", "Puesto", "Telefono", "Turno"
            }
        ));
        jtbEmpleado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbEmpleadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbEmpleado);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 350, 370));

        jLabel7.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Empleado");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, -1, -1));

        BarraDeBusqueda.setBackground(new java.awt.Color(181, 218, 240));
        BarraDeBusqueda.setForeground(new java.awt.Color(0, 0, 0));
        BarraDeBusqueda.setBorder(null);
        jPanel1.add(BarraDeBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 250, 20));

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("___________________________________");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, -1, -1));

        jButton4.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        jButton4.setText("Borrar");
        jButton4.setBorder(null);
        jButton4.setContentAreaFilled(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton4.setVerifyInputWhenFocusTarget(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 430, 130, 34));

        btnbuscar.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        btnbuscar.setForeground(new java.awt.Color(0, 0, 0));
        btnbuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar (1).png"))); // NOI18N
        btnbuscar.setBorder(null);
        btnbuscar.setContentAreaFilled(false);
        btnbuscar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnbuscar.setVerifyInputWhenFocusTarget(false);
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnbuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, 50, -1));

        jButton6.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 0));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/editar.png"))); // NOI18N
        jButton6.setText("Editar");
        jButton6.setBorder(null);
        jButton6.setContentAreaFilled(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton6.setVerifyInputWhenFocusTarget(false);
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 382, 130, 30));

        jButton7.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(0, 0, 0));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton-agregar (1).png"))); // NOI18N
        jButton7.setText("Añadir");
        jButton7.setBorder(null);
        jButton7.setContentAreaFilled(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton7.setVerifyInputWhenFocusTarget(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 340, 128, -1));

        BarraDeBusqueda1.setBackground(new java.awt.Color(181, 218, 240));
        BarraDeBusqueda1.setForeground(new java.awt.Color(0, 0, 0));
        BarraDeBusqueda1.setBorder(null);
        jPanel1.add(BarraDeBusqueda1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 250, 20));

        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("________________________");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, -1, -1));

        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("________________________");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, -1, -1));

        BarraDeBusqueda3.setBackground(new java.awt.Color(181, 218, 240));
        BarraDeBusqueda3.setForeground(new java.awt.Color(0, 0, 0));
        BarraDeBusqueda3.setBorder(null);
        jPanel1.add(BarraDeBusqueda3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 250, 20));

        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("________________________");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, -1, -1));

        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("________________________");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, -1, -1));

        BarraDeBusqueda4.setBackground(new java.awt.Color(118, 120, 237));
        BarraDeBusqueda4.setForeground(new java.awt.Color(0, 0, 0));
        BarraDeBusqueda4.setBorder(null);
        jPanel1.add(BarraDeBusqueda4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 250, 20));

        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("________________________");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, -1, -1));

        txthorario.setBackground(new java.awt.Color(181, 218, 240));
        txthorario.setForeground(new java.awt.Color(0, 0, 0));
        txthorario.setBorder(null);
        jPanel1.add(txthorario, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 250, 20));

        jLabel16.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Horario:");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));

        comboBoxPuesto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Empleado", "Administrador" }));
        comboBoxPuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxPuestoActionPerformed(evt);
            }
        });
        jPanel1.add(comboBoxPuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 120, 30));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 520));
    }// </editor-fold>//GEN-END:initComponents

    
       private void agregarListenerBusqueda() {
        // Agregar un ActionListener al botón de búsqueda
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarEmpleadoPorID(BarraDeBusqueda.getText());  // Llama a la función de búsqueda
            }
        });
    }
       
    private void buscarEmpleadoPorID(String id) {
    // Si la barra de búsqueda está vacía, recarga todos los empleados
    if (id.trim().isEmpty()) {
        actualizarTabla();  // Recargar toda la tabla
    } else {
        try (Connection conn = Conexion.getConnection()) {
            String query = "SELECT * FROM dbo.Usuario WHERE IdUsuario LIKE ?";
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setString(1, "%" + id + "%");  // Usar el LIKE para buscar coincidencias parciales

            var rs = stmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jtbEmpleado.getModel();
            model.setRowCount(0); // Limpiar la tabla antes de agregar los nuevos datos
            boolean encontrado = false;
            
            while (rs.next()) {
                String idUsuario = rs.getString("IdUsuario");
                String nombre = rs.getString("Nombre");
                String puesto = rs.getString("Puesto");
                String telefono = rs.getString("Telefono");
                String turno = rs.getString("Turno");

                model.addRow(new Object[]{idUsuario, nombre, puesto, telefono, turno});
                encontrado = true;
            }
            
            // Si se encontró el resultado, seleccionamos la primera fila
            if (encontrado) {
                // Verificar si hay filas antes de seleccionar
                if (model.getRowCount() > 0) {
                    // Seleccionamos la primera fila (ajustar según sea necesario)
                    jtbEmpleado.setRowSelectionInterval(0, 0);  // Selecciona la primera fila
                }
            } else {
                JOptionPane.showMessageDialog(this, "Empleado no encontrado.");
                actualizarTabla();
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al cargar los datos.");
        }
    }
}


    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        eliminarEmpleado();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnbuscarActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = jtbEmpleado.getSelectedRow();
    
    if (filaSeleccionada != -1) {
        try (Connection conn = Conexion.getConnection()) {
            // Obtén el ID del empleado (asumiendo que es la primera columna)
            String idEmpleado = jtbEmpleado.getValueAt(filaSeleccionada, 0).toString();

            // Definir la consulta de actualización
            String updateSql = "UPDATE dbo.Usuario SET Nombre = ?, Puesto = ?, Telefono = ?, Turno = ? WHERE IdUsuario = ?";
            
            PreparedStatement stmt = conn.prepareStatement(updateSql);
            stmt.setString(1, BarraDeBusqueda1.getText());
            stmt.setString(2, (String) comboBoxPuesto.getSelectedItem());
            stmt.setString(3, BarraDeBusqueda3.getText());
            stmt.setString(4, txthorario.getText());
            stmt.setString(5, idEmpleado);  // Establecer el ID del empleado que estamos actualizando

            int filasActualizadas = stmt.executeUpdate();
            
            if (filasActualizadas > 0) {
                JOptionPane.showMessageDialog(this, "Empleado actualizado correctamente.");
                actualizarTabla();  // Método para actualizar los datos en la tabla después de la edición
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar los datos del empleado.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al conectar con la base de datos.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, selecciona un empleado para editar.");
    }
}
    
     private void cargarTablaAlAbrir() {
        actualizarTabla(); // Llama a la función que ya tienes para actualizar la tabla
    }

private void actualizarTabla() {
    // Aquí debes recargar los datos de la base de datos en tu JTable
    // Ejemplo de cómo puedes hacerlo:
    // Aquí debes recargar los datos de la base de datos en tu JTable
    // Ejemplo de cómo puedes hacerlo:
    try (Connection conn = Conexion.getConnection()) {
        String query = "SELECT * FROM dbo.Usuario";
        PreparedStatement stmt = conn.prepareStatement(query);
        var rs = stmt.executeQuery();
        
        DefaultTableModel model = (DefaultTableModel) jtbEmpleado.getModel();
        model.setRowCount(0); // Limpiar la tabla antes de agregar los nuevos datos
        
        while (rs.next()) {
            String idUsuario = rs.getString("IdUsuario");
            String nombre = rs.getString("Nombre");
            String puesto = rs.getString("Puesto");
            String telefono = rs.getString("Telefono");
            String turno = rs.getString("Turno");

            model.addRow(new Object[]{idUsuario, nombre, puesto, telefono, turno,});
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error al cargar los datos.");
    }


    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        try (Connection conn = Conexion.getConnection()) {
    String insertSql = "INSERT INTO dbo.Usuario (Nombre, Puesto, Telefono, Turno,Contraseña) VALUES (?, ?, ?, ?, ?)";
    PreparedStatement stmt = conn.prepareStatement(insertSql);
    
    String nombre = BarraDeBusqueda1.getText();
     String puesto = (String) comboBoxPuesto.getSelectedItem();
    String telefono = BarraDeBusqueda3.getText();
    String turno = txthorario.getText();
    
    String Contraseña = JOptionPane.showInputDialog("Ingresar contraseña");
    
    stmt.setString(1, nombre);
    stmt.setString(2, puesto);
    stmt.setString(3, telefono);
    stmt.setString(4, turno);
    stmt.setString(5, Contraseña);
    
    int filasAfectadas = stmt.executeUpdate();
    
    if (filasAfectadas > 0) {
        System.out.println("Empleado insertado correctamente.");
        
        // Actualizar JTable
        DefaultTableModel model = (DefaultTableModel) jtbEmpleado.getModel();
        model.setRowCount(0); // Limpiar tabla antes de actualizar
        
        String selectSql = "SELECT * FROM dbo.Usuario";
        try (PreparedStatement selectStmt = conn.prepareStatement(selectSql); var rs = selectStmt.executeQuery()) {
           while (rs.next()) {
                Object[] row = {
                rs.getInt("IdUsuario"), 
                rs.getString("Nombre"),
                rs.getString("Puesto"),
                rs.getString("Telefono"),
                rs.getString("Turno")
                    };
        model.addRow(row);
    }

        }
    } else {
        System.out.println("Error al insertar el empleado.");
    }
} catch (SQLException e) {
}

    }//GEN-LAST:event_jButton7ActionPerformed

    private void eliminarEmpleado() {
    int fila = jtbEmpleado.getSelectedRow();
    
    if (fila >= 0) {
        String idUsuario = jtbEmpleado.getValueAt(fila, 0).toString();
        System.out.println("Eliminando empleado con ID: " + idUsuario); // Verifica ID

        int confirmacion = JOptionPane.showConfirmDialog(null, "¿Seguro que deseas eliminar este empleado?", 
                "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
        
        if (confirmacion == JOptionPane.YES_OPTION) {
            try (Connection conn = Conexion.getConnection()) {
                if (conn == null) {
                    JOptionPane.showMessageDialog(null, "Error: No se pudo conectar a la base de datos.");
                    return;
                }
                
                String sql = "DELETE FROM usuario WHERE IdUsuario = ?";
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setString(1, idUsuario);
                
                int filasAfectadas = pst.executeUpdate();
                if (filasAfectadas > 0) {
                    JOptionPane.showMessageDialog(null, "Empleado eliminado correctamente.");
                    actualizarTabla();
                    BarraDeBusqueda1.setText("");
                    BarraDeBusqueda3.setText("");
                    txthorario.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "No se encontró el empleado con ID: " + idUsuario);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error SQL: " + e.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "Selecciona un empleado para eliminar.");
    }
}


    
    private void comboBoxPuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxPuestoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxPuestoActionPerformed

    private void jtbEmpleadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbEmpleadoMouseClicked
        // TODO add your handling code here:
        int filaseleccionada=jtbEmpleado.getSelectedRow();
        
        if (filaseleccionada != -1) {
            String nombre = jtbEmpleado.getValueAt(filaseleccionada, 1).toString();
            String puesto = jtbEmpleado.getValueAt(filaseleccionada, 2).toString();
            String telefono = jtbEmpleado.getValueAt(filaseleccionada, 3).toString();
            String turno = jtbEmpleado.getValueAt(filaseleccionada, 4).toString();
     
            
        BarraDeBusqueda1.setText(nombre);
        comboBoxPuesto.setSelectedItem(puesto);
            BarraDeBusqueda3.setText(telefono);
            txthorario.setText(turno);     
        }
        
        
        
        
    }//GEN-LAST:event_jtbEmpleadoMouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6MouseClicked

        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BarraDeBusqueda;
    private javax.swing.JTextField BarraDeBusqueda1;
    private javax.swing.JTextField BarraDeBusqueda3;
    private javax.swing.JTextField BarraDeBusqueda4;
    private javax.swing.JButton btnbuscar;
    private javax.swing.JComboBox<String> comboBoxPuesto;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtbEmpleado;
    private javax.swing.JTextField txthorario;
    // End of variables declaration//GEN-END:variables
}
