package Administrador;

import java.io.File;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.SQLException;

import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.sql.ResultSet;
import javax.swing.JFileChooser;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author Luis DC
 */
public class panelCorteCaja extends javax.swing.JPanel {

    /**
     * Creates new form panelempleados
     */
    
    public panelCorteCaja() {
         try (Connection conn = Conexion.getConnection()) {
            System.out.println("Conexión exitosa:D.");
            
        } catch (SQLException e) {
            System.out.println("Error de conexión");
            e.printStackTrace();
            
        }
        initComponents();
        jDateChooser1.getDateEditor().addPropertyChangeListener("date", evt -> actualizarCortePorFecha());
        jYearChooser1.addPropertyChangeListener("year", evt -> {actualizarCortePorMes(); actualizarCortePorAnio();});
        jMonthChooser1.addPropertyChangeListener("month", evt -> {actualizarCortePorMes();});
        jcbEstado.addActionListener(evt -> {actualizarCortePorFecha();actualizarCortePorMes();actualizarCortePorAnio();});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        lbltexto = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        lbltexto1 = new javax.swing.JLabel();
        lbltexto2 = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        jcbEstado = new javax.swing.JComboBox<>();
        txtReporte = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(181, 218, 240));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel7.setText("Corte de Caja");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, -1, -1));

        lbltexto.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        lbltexto.setText("Total del Dia");
        jPanel1.add(lbltexto, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, -1, -1));
        jPanel1.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, 120, -1));

        jLabel1.setText("Del Dia");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        jLabel2.setText("Del Mes");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, -1));

        jLabel3.setText("Del Año");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, -1, -1));
        jPanel1.add(jYearChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 280, 90, -1));
        jPanel1.add(jMonthChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, -1, -1));

        lbltexto1.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        lbltexto1.setText("Total del Mes");
        jPanel1.add(lbltexto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 200, -1, -1));

        lbltexto2.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        lbltexto2.setText("Total del Año");
        jPanel1.add(lbltexto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 240, -1, -1));

        lblEstado.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        lblEstado.setText("Estado");
        jPanel1.add(lblEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, 20));

        jcbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Pendiente", "Proceso", "Listo" }));
        jcbEstado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbEstadoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jcbEstadoMouseEntered(evt);
            }
        });
        jcbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEstadoActionPerformed(evt);
            }
        });
        jPanel1.add(jcbEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 110, -1));

        txtReporte.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Administrador/sobresalir (1).png"))); // NOI18N
        txtReporte.setText("Generar reporte");
        txtReporte.setToolTipText("");
        txtReporte.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtReporteMouseClicked(evt);
            }
        });
        jPanel1.add(txtReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 350, -1, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 500));
    }// </editor-fold>//GEN-END:initComponents

    private void jcbEstadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbEstadoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbEstadoMouseClicked

    private void jcbEstadoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbEstadoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbEstadoMouseEntered

    private void jcbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbEstadoActionPerformed

    private void txtReporteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtReporteMouseClicked
        JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Guardar reporte como...");
    fileChooser.setSelectedFile(new java.io.File("reporte_corte.xlsx"));

    int seleccion = fileChooser.showSaveDialog(this);
    if (seleccion != JFileChooser.APPROVE_OPTION) return;

    File archivo = fileChooser.getSelectedFile();

    try (Connection con = Conexion.getConnection()) {
        String sql = "SELECT FechaEntregaEstimada, EstadoPedido, CostoTotal FROM Pedido";
        PreparedStatement pst = con.prepareStatement(sql);
        ResultSet rs = pst.executeQuery();

        // Crear archivo Excel
        Workbook workbook = new XSSFWorkbook();
        Sheet sheet = workbook.createSheet("Corte Caja");

        // Encabezados
        Row header = sheet.createRow(0);
        header.createCell(0).setCellValue("Fecha");
        header.createCell(1).setCellValue("Estado");
        header.createCell(2).setCellValue("Costo Total");

        int fila = 1;
        while (rs.next()) {
            Row row = sheet.createRow(fila++);
            row.createCell(0).setCellValue(rs.getString("FechaEntregaEstimada"));
            row.createCell(1).setCellValue(rs.getString("EstadoPedido"));
            row.createCell(2).setCellValue(rs.getDouble("CostoTotal"));
        }

        // Escribir el archivo
        try (FileOutputStream fos = new FileOutputStream(archivo)) {
            workbook.write(fos);
        }

        workbook.close();
        JOptionPane.showMessageDialog(this, "¡Reporte exportado correctamente!");
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al exportar a Excel.");
    }
    }//GEN-LAST:event_txtReporteMouseClicked

/*private void actualizarCortePorFecha() {
    Date fechaSeleccionada = jDateChooser1.getDate();
    if (fechaSeleccionada == null) return;

    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    String fecha = sdf.format(fechaSeleccionada);

    try (Connection con = Conexion.getConnection()) {
        String query = "SELECT SUM(CostoTotal) AS Total FROM Pedido WHERE FechaEntregaEstimada = ? "; //AND EstadoPedido = 'Entregado'
        PreparedStatement pst = con.prepareStatement(query);
        pst.setString(1, fecha);
        ResultSet rs = pst.executeQuery();

        double total = 0;
        if (rs.next()) {
            total = rs.getDouble("Total");
        }

        lbltexto.setText("Total del día: $" + String.format("%.2f", total));
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al obtener el corte de caja.");
        ex.printStackTrace();
    }
}*/
    
    private void actualizarCortePorFecha() {
    Date fechaSeleccionada = jDateChooser1.getDate();
    if (fechaSeleccionada == null) return;

    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    String fecha = sdf.format(fechaSeleccionada);
    String estado = jcbEstado.getSelectedItem().toString();

    String query = "SELECT SUM(CostoTotal) AS Total FROM Pedido WHERE FechaEntregaEstimada = ?";
    if (!estado.equals("Seleccione")) {
        query += " AND EstadoPedido = ?";
    }

    try (Connection con = Conexion.getConnection();
         PreparedStatement pst = con.prepareStatement(query)) {

        pst.setString(1, fecha);
        if (!estado.equals("Seleccione")) {
            pst.setString(2, estado);
        }

        ResultSet rs = pst.executeQuery();
        double total = 0;
        if (rs.next()) {
            total = rs.getDouble("Total");
        }

        lbltexto.setText("Total del día: $" + String.format("%.2f", total));
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al obtener el corte del día.");
        ex.printStackTrace();
    }
}


private void actualizarCortePorMes() {
    int mes = jMonthChooser1.getMonth() + 1; // enero = 0, por eso sumamos 1
    int anio = jYearChooser1.getYear();
    String estado = jcbEstado.getSelectedItem().toString();

    String query = "SELECT SUM(CostoTotal) AS Total FROM Pedido WHERE MONTH(FechaEntregaEstimada) = ? AND YEAR(FechaEntregaEstimada) = ?";
    if (!estado.equals("Seleccione")) {
        query += " AND EstadoPedido = ?";
    }

    try (Connection con = Conexion.getConnection();
         PreparedStatement pst = con.prepareStatement(query)) {

        pst.setInt(1, mes);
        pst.setInt(2, anio);
        if (!estado.equals("Seleccione")) {
            pst.setString(3, estado);
        }

        ResultSet rs = pst.executeQuery();
        double total = 0;
        if (rs.next()) {
            total = rs.getDouble("Total");
        }

        lbltexto1.setText("Total del mes: $" + String.format("%.2f", total));
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al obtener corte del mes.");
        ex.printStackTrace();
    }
}

private void actualizarCortePorAnio() {
    int anio = jYearChooser1.getYear();
    String estado = jcbEstado.getSelectedItem().toString();

    String query = "SELECT SUM(CostoTotal) AS Total FROM Pedido WHERE YEAR(FechaEntregaEstimada) = ?";
    if (!estado.equals("Seleccione")) {
        query += " AND EstadoPedido = ?";
    }

    try (Connection con = Conexion.getConnection();
         PreparedStatement pst = con.prepareStatement(query)) {

        pst.setInt(1, anio);
        if (!estado.equals("Seleccione")) {
            pst.setString(2, estado);
        }

        ResultSet rs = pst.executeQuery();
        double total = 0;
        if (rs.next()) {
            total = rs.getDouble("Total");
        }

        lbltexto2.setText("Total del año: $" + String.format("%.2f", total));
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al obtener corte del año.");
        ex.printStackTrace();
    }
}

    
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private javax.swing.JPanel jPanel1;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private javax.swing.JComboBox<String> jcbEstado;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lbltexto;
    private javax.swing.JLabel lbltexto1;
    private javax.swing.JLabel lbltexto2;
    private javax.swing.JLabel txtReporte;
    // End of variables declaration//GEN-END:variables
}
